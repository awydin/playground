

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.lang.reflect.InvocationTargetException;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.apache.commons.beanutils.PropertyUtils;
import org.springframework.ui.jasperreports.JasperReportsUtils;

import net.sf.jasperreports.engine.DefaultJasperReportsContext;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRField;
import net.sf.jasperreports.engine.JRPropertiesUtil;
import net.sf.jasperreports.engine.JRRewindableDataSource;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;

public class JasperReportManager
{

    public static void main(String[] args) throws JRException, FileNotFoundException
    {

        JasperReport jasperReport = (JasperReport) JRLoader
                .loadObject(new File("/report/testReport.jasper"));
        OutputStream os = new FileOutputStream(new File("/home/omidp/1.pdf"));
        Map<net.sf.jasperreports.engine.JRExporterParameter, Object> parameters = new HashMap<>();
        JRPropertiesUtil props = JRPropertiesUtil.getInstance(DefaultJasperReportsContext.getInstance());
        // JasperReportsUtils.renderAsPdf(jasperReport, new HashMap<String,
        // Object>(), Arrays.asList(new
        // Bean("\u063a\u06cc\u0631\u0641\u0639\u0627\u0644"), new
        // Bean("omidbiz"), new Bean("تست")), os, parameters);
        //JasperReportsUtils.renderAsPdf(jasperReport, new HashMap<String, Object>(), new JasperWebServiceDatasource(), os, parameters);

    }

    public static class JRPagingDatasource implements JRRewindableDataSource
    {

        private static final int MAX_RESULT = 100;

        private long totalCount;

        private Object currentBean;

        private JasperPaginationHandler paginationHandler;

        private long firstResult;

        private Collection<?> data;

        private Iterator<?> iterator;

        private int currentItemIndex;

        public JasperWebServiceDatasource(JasperPaginationHandler paginationHandler)
        {
            this.paginationHandler = paginationHandler;
            this.totalCount = paginationHandler.getResultCount();
        }

        @Override
        public boolean next() throws JRException
        {
            if ((this.totalCount == 0) || (this.totalCount >= 0 && this.currentItemIndex >= this.totalCount))
            {
                return false;
            }
            if (this.data == null || this.currentItemIndex >= MAX_RESULT)
            {
                this.data = paginationHandler.getResultList(this.firstResult, MAX_RESULT);
                this.firstResult++;
            }
            if (this.data != null)
            {
                this.iterator = this.data.iterator();
                if (this.iterator != null)
                {
                    boolean hasNext = this.iterator.hasNext();
                    if (hasNext)
                    {
                        this.currentBean = this.iterator.next();
                        currentItemIndex++;
                        return true;
                    }
                }
            }
            //
            return false;
        }

        @Override
        public Object getFieldValue(JRField jrField) throws JRException
        {
            String reportFieldName = jrField.getName();
            Object bean = this.currentBean;
            if(bean != null)
            {
                try
                {
                    return PropertyUtils.getProperty(bean, reportFieldName);
                }
                catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException e)
                {
                    throw new JRException(e);
                }
            }
            return "test";
        }
        
        @Override
        public void moveFirst()
        {
            if (this.data != null)
            {
                this.iterator = this.data.iterator();
            }
        }

    }

    public interface JasperPaginationHandler
    {
        public Collection<?> getResultList(long firstResult, long maxResult);

        public long getResultCount();
    }

    

}
